{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/TextField/TextField.tsx","components/NewMovie/NewMovie.tsx","App.tsx","index.tsx"],"names":["MovieCard","movie","imgUrl","title","description","imdbUrl","className","src","alt","href","MoviesList","movies","map","imdbId","TextField","name","value","label","pattern","required","onChange","useState","Math","random","toString","slice","id","touched","setToched","hasError","htmlFor","classNames","type","placeholder","event","target","onBlur","NewMovie","onAdd","count","setCount","setTitle","setDescription","setImgUrl","setImdbUrl","setImdbId","addMovie","current","onClick","preventDefault","disabled","App","moviesFromServer","setMovie","currentMovies","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.163006ce.chunk.js","sourcesContent":["import React from 'react';\nimport { Movie } from '../../types/Movie';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie,\n};\n\nexport const MovieCard: React.FC<Props> = ({ movie }) => {\n  const {\n    imgUrl,\n    title,\n    description,\n    imdbUrl,\n  } = movie;\n\n  return (\n    <div className=\"card\" data-cy=\"movie-card\">\n      <div className=\"card-image\">\n        <figure className=\"image is-4by3\">\n          <img\n            src={imgUrl}\n            alt=\"Film logo\"\n          />\n        </figure>\n      </div>\n      <div className=\"card-content\">\n        <div className=\"media\">\n          <div className=\"media-left\">\n            <figure className=\"image is-48x48\">\n              <img\n                src=\"images/imdb-logo.jpeg\"\n                alt=\"imdb\"\n              />\n            </figure>\n          </div>\n          <div className=\"media-content\">\n            <p className=\"title is-8\">{title}</p>\n          </div>\n        </div>\n\n        <div className=\"content\">\n          {description}\n          <br />\n          <a href={imdbUrl}>IMDB</a>\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\nimport { Movie } from '../../types/Movie';\n\ninterface Props {\n  movies: Movie[];\n}\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard\n        key={movie.imdbId}\n        movie={movie}\n      />\n    ))}\n  </div>\n);\n","import classNames from 'classnames';\nimport React, { useState } from 'react';\n\ntype Props = {\n  name: string,\n  value: string,\n  label?: string,\n  pattern?: string,\n  required?: boolean,\n  onChange?: (newValue: string) => void,\n};\n\nfunction getRandomDigits() {\n  return Math.random().toString().slice(2);\n}\n\nexport const TextField: React.FC<Props> = ({\n  name,\n  value,\n  label = name,\n  pattern = '/./;',\n  required = false,\n  onChange = () => {},\n}) => {\n  const [id] = useState(() => `${name}-${getRandomDigits()}`);\n  const [touched, setToched] = useState(false);\n  const hasError = touched && required && !value;\n\n  return (\n    <div className=\"field\">\n      <label className=\"label\" htmlFor={id}>\n        {label}\n      </label>\n\n      <div className=\"control\">\n        <input\n          id={id}\n          data-cy={`movie-${name}`}\n          className={classNames('input', {\n            'is-danger': hasError,\n          })}\n          type=\"text\"\n          pattern={pattern}\n          placeholder={`Enter ${label}`}\n          value={value}\n          onChange={event => onChange(event.target.value)}\n          onBlur={() => setToched(true)}\n        />\n      </div>\n\n      {hasError && (\n        <p className=\"help is-danger\">{`${label} is required`}</p>\n      )}\n    </div>\n  );\n};\n","import { useState } from 'react';\nimport { Movie } from '../../types/Movie';\nimport { TextField } from '../TextField';\n\ntype Props = {\n  onAdd: (movie: Movie) => void;\n};\n\nexport const NewMovie: React.FC<Props> = ({ onAdd }) => {\n  const [count, setCount] = useState(0);\n  const [title, setTitle] = useState('');\n  const [description, setDescription] = useState('');\n  const [imgUrl, setImgUrl] = useState('');\n  const [imdbUrl, setImdbUrl] = useState('');\n  const [imdbId, setImdbId] = useState('');\n\n  const increaseCount = () => {\n    setCount(current => current + 1);\n  };\n\n  const clearForm = () => {\n    setTitle('');\n    setDescription('');\n    setImgUrl('');\n    setImdbUrl('');\n    setImdbId('');\n  };\n\n  const addMovie = () => {\n    onAdd({\n      title,\n      description,\n      imgUrl,\n      imdbUrl,\n      imdbId,\n    });\n\n    increaseCount();\n    clearForm();\n  };\n\n  return (\n    <form className=\"NewMovie\" key={count}>\n      <h2 className=\"title\">Add a movie</h2>\n\n      <TextField\n        name=\"title\"\n        label=\"Title\"\n        value={title}\n        onChange={setTitle}\n        required\n      />\n\n      <TextField\n        name=\"description\"\n        label=\"Description\"\n        value={description}\n        onChange={setDescription}\n      />\n\n      <TextField\n        name=\"imgUrl\"\n        label=\"Image URL\"\n        value={imgUrl}\n        onChange={setImgUrl}\n        required\n      />\n\n      <TextField\n        name=\"imdbUrl\"\n        label=\"Imdb URL\"\n        // eslint-disable-next-line max-len\n        pattern=\"/^((([A-Za-z]{3,9}:(?:\\/\\/)?)(?:[-;:&=+$,\\w]+@)?[A-Za-z0-9.-]+|(?:www\\.|[-;:&=+$,\\w]+@)[A-Za-z0-9.-]+)((?:\\/[+~%/.\\w-_]*)?\\??(?:[-+=&;%@.\\w_]*)#?(?:[.!/\\\\\\w]*))?)$/;\"\n        value={imdbUrl}\n        onChange={setImdbUrl}\n        required\n      />\n\n      <TextField\n        name=\"imdbId\"\n        label=\"Imdb ID\"\n        // eslint-disable-next-line max-len\n        pattern=\"/^((([A-Za-z]{3,9}:(?:\\/\\/)?)(?:[-;:&=+$,\\w]+@)?[A-Za-z0-9.-]+|(?:www\\.|[-;:&=+$,\\w]+@)[A-Za-z0-9.-]+)((?:\\/[+~%/.\\w-_]*)?\\??(?:[-+=&;%@.\\w_]*)#?(?:[.!/\\\\\\w]*))?)$/;\"\n        value={imdbId}\n        onChange={setImdbId}\n        required\n      />\n\n      <div className=\"field is-grouped\">\n        <div className=\"control\">\n          <button\n            type=\"submit\"\n            data-cy=\"submit-button\"\n            className=\"button is-link\"\n            onClick={(event) => {\n              event.preventDefault();\n              addMovie();\n            }}\n            disabled={((!title\n            || !imgUrl\n            || !imdbUrl\n            || !imdbId) && true) || false}\n          >\n            Add\n          </button>\n        </div>\n      </div>\n    </form>\n  );\n};\n","import './App.scss';\nimport { useState } from 'react';\nimport { MoviesList } from './components/MoviesList';\nimport { NewMovie } from './components/NewMovie';\nimport moviesFromServer from './api/movies.json';\nimport { Movie } from './types/Movie';\n\nexport const App = () => {\n  const [movies, setMovie] = useState([...moviesFromServer]);\n\n  const onAdd = (movie: Movie) => {\n    setMovie(currentMovies => [\n      ...currentMovies,\n      movie,\n    ]);\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n      <div className=\"sidebar\">\n        <NewMovie onAdd={onAdd} />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}